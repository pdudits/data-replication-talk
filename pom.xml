<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>fish.payara.talk.replicationtrouble</groupId>
  <artifactId>parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>producer-app</module>
    <module>consumer-app</module>
    <module>pleasync</module>
    <module>demo</module>
  </modules>
  <packaging>pom</packaging>
  <properties>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <version.payara>5.192</version.payara>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.eclipse.microprofile</groupId>
      <artifactId>microprofile</artifactId>
      <version>2.0.1</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <!-- Alternative to Hamcrest matchers. Provides fluent, type-aware API -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.protocol</groupId>
      <artifactId>arquillian-protocol-servlet</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>1.1.14.Final</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>payara-micro</id>
      <activation>
        <property>
          <name>!deploy.target</name><!-- we may optionally target full payara for tests -->
        </property>
      </activation>
      <dependencies>
        <!-- With payara micro, we also have full Java EE API at our disposal -->
        <dependency>
          <groupId>javax</groupId>
          <artifactId>javaee-api</artifactId>
          <version>8.0</version>
          <scope>provided</scope>
        </dependency>

        <dependency>
          <groupId>fish.payara.extras</groupId>
          <artifactId>payara-micro</artifactId>
          <version>${version.payara}</version>
          <scope>provided</scope>
        </dependency>

        <dependency>
          <groupId>fish.payara.arquillian</groupId>
          <artifactId>arquillian-payara-micro-5-managed</artifactId>
          <version>1.0.Beta3</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>fish.payara.maven.plugins</groupId>
            <artifactId>payara-micro-maven-plugin</artifactId>
            <version>1.0.4</version>
            <configuration>
              <payaraVersion>${version.payara}</payaraVersion>
              <deployWar>true</deployWar>
              <javaCommandLineOptions>
                <option>
                  <value>-Xdebug</value>
                </option>
                <option>
                  <key>-Xrunjdwp:transport</key>
                  <value>dt_socket,server=y,suspend=n,address=5005</value>
                </option>
              </javaCommandLineOptions>
              <commandLineOptions>
<!--                <option>-->
<!--                  <key>&#45;&#45;rootdir</key>-->
<!--                  <value>${project.build.directory}/micro</value>-->
<!--                </option>-->
                <option>
                  <key>--nocluster</key>
                </option>
                <option>
                  <key>--nested</key>
                </option>
              </commandLineOptions>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-payara-micro</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>fish.payara.extras</groupId>
                      <artifactId>payara-micro</artifactId>
                      <version>${version.payara}</version>
                      <type>jar</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${session.executionRootDirectory}/target/</outputDirectory>
                      <destFileName>payara-micro-${version.payara}.jar</destFileName>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>clean-micro-apps</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>
                    clean
                  </goal>
                </goals>
                <configuration>
                  <filesets>
                    <fileset>
                      <directory>${session.executionRootDirectory}/target/micro/applications</directory>
                    </fileset>
                  </filesets>
                  <failOnError>false</failOnError>
                  <excludeDefaultDirectories>true</excludeDefaultDirectories>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Configure Payara Micro Runtime -->
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.19.1</version>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <systemProperties>
                <payara.microJar>${session.executionRootDirectory}/target/payara-micro-${version.payara}.jar</payara.microJar>
                <payara.clusterEnabled>false</payara.clusterEnabled>
                <payara.extraMicroOptions>--nested</payara.extraMicroOptions>
              </systemProperties>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>focused-test</id>
      <activation>
        <property>
          <name>test</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemProperties>
                <payara.microJar>${session.executionRootDirectory}/target/payara-micro-${version.payara}.jar</payara.microJar>
                <payara.clusterEnabled>false</payara.clusterEnabled>
                <payara.extraMicroOptions>--rootDir ${session.executionRootDirectory}/target/micro</payara.extraMicroOptions>
              </systemProperties>
            </configuration>
          </plugin>
        </plugins>
      </build>

    </profile>
  </profiles>
</project>
